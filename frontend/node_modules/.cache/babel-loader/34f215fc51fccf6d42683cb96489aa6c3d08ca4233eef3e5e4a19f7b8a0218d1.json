{"ast":null,"code":"import axios from'axios';// 创建axios实例\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:3001/api',timeout:10000,headers:{'Content-Type':'application/json'}});// 请求拦截器 - 添加token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// 响应拦截器 - 处理错误\napi.interceptors.response.use(response=>{return response.data;},error=>{if(error.response){const{status,data}=error.response;// token过期或无效\nif(status===401||status===403){localStorage.removeItem('token');localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(data||{message:'请求失败'});}return Promise.reject({message:'网络错误，请检查网络连接'});});// 认证相关API\nexport const authAPI={// 登录\nlogin:(studentId,password)=>api.post('/auth/login',{studentId,password}),// 强制修改密码\nforceChangePassword:newPassword=>api.post('/auth/force-change-password',{newPassword}),// 修改密码\nchangePassword:(oldPassword,newPassword)=>api.post('/auth/change-password',{oldPassword,newPassword}),// 验证token\nverify:()=>api.get('/auth/verify')};// 任务相关API\nexport const taskAPI={// 获取任务列表\ngetTasks:(startDate,endDate)=>api.get('/tasks',{params:{startDate,endDate}}),// 更新任务\nupdateTask:(taskId,updates)=>api.put(`/tasks/${taskId}`,updates),// 请假申请\nrequestLeave:date=>api.post('/tasks/leave',{date}),// 获取请假记录\ngetLeaveRecords:()=>api.get('/tasks/leave-records')};// 档案相关API\nexport const profileAPI={// 获取档案\ngetProfile:()=>api.get('/profiles'),// 更新档案\nupdateProfile:profileData=>api.put('/profiles',profileData)};// 管理员相关API\nexport const adminAPI={// 获取学生列表\ngetStudents:()=>api.get('/admin/students'),// 创建学生\ncreateStudent:name=>api.post('/admin/students',{name}),// 重置密码\nresetPassword:studentId=>api.post(`/admin/students/${studentId}/reset-password`),// 获取学生档案\ngetStudentProfile:studentId=>api.get(`/admin/students/${studentId}/profile`),// 创建单个任务\ncreateTask:taskData=>api.post('/admin/tasks/bulk-import',{csvData:`学生ID,日期,任务类型,任务标题\\n${taskData.studentId},${taskData.date},${taskData.type||'学习'},${taskData.title}`}),// 批量导入任务\nbulkImportTasks:csvData=>api.post('/admin/tasks/bulk-import',{csvData}),// 获取任务报告\ngetTaskReport:date=>api.get('/admin/reports/tasks',{params:{date}})};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","status","removeItem","window","location","href","message","authAPI","login","studentId","password","post","forceChangePassword","newPassword","changePassword","oldPassword","verify","get","taskAPI","getTasks","startDate","endDate","params","updateTask","taskId","updates","put","requestLeave","date","getLeaveRecords","profileAPI","getProfile","updateProfile","profileData","adminAPI","getStudents","createStudent","name","resetPassword","getStudentProfile","createTask","taskData","csvData","type","title","bulkImportTasks","getTaskReport"],"sources":["/Users/danieldong/Documents/GitHub/gougegaoshu/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器 - 添加token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器 - 处理错误\napi.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    if (error.response) {\n      const { status, data } = error.response;\n      \n      // token过期或无效\n      if (status === 401 || status === 403) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n      }\n      \n      return Promise.reject(data || { message: '请求失败' });\n    }\n    \n    return Promise.reject({ message: '网络错误，请检查网络连接' });\n  }\n);\n\n// 认证相关API\nexport const authAPI = {\n  // 登录\n  login: (studentId, password) => \n    api.post('/auth/login', { studentId, password }),\n  \n  // 强制修改密码\n  forceChangePassword: (newPassword) => \n    api.post('/auth/force-change-password', { newPassword }),\n  \n  // 修改密码\n  changePassword: (oldPassword, newPassword) => \n    api.post('/auth/change-password', { oldPassword, newPassword }),\n  \n  // 验证token\n  verify: () => \n    api.get('/auth/verify')\n};\n\n// 任务相关API\nexport const taskAPI = {\n  // 获取任务列表\n  getTasks: (startDate, endDate) => \n    api.get('/tasks', { params: { startDate, endDate } }),\n  \n  // 更新任务\n  updateTask: (taskId, updates) => \n    api.put(`/tasks/${taskId}`, updates),\n  \n  // 请假申请\n  requestLeave: (date) => \n    api.post('/tasks/leave', { date }),\n  \n  // 获取请假记录\n  getLeaveRecords: () => \n    api.get('/tasks/leave-records')\n};\n\n// 档案相关API\nexport const profileAPI = {\n  // 获取档案\n  getProfile: () => \n    api.get('/profiles'),\n  \n  // 更新档案\n  updateProfile: (profileData) => \n    api.put('/profiles', profileData)\n};\n\n// 管理员相关API\nexport const adminAPI = {\n  // 获取学生列表\n  getStudents: () => \n    api.get('/admin/students'),\n  \n  // 创建学生\n  createStudent: (name) => \n    api.post('/admin/students', { name }),\n  \n  // 重置密码\n  resetPassword: (studentId) => \n    api.post(`/admin/students/${studentId}/reset-password`),\n  \n  // 获取学生档案\n  getStudentProfile: (studentId) => \n    api.get(`/admin/students/${studentId}/profile`),\n  \n  // 创建单个任务\n  createTask: (taskData) => \n    api.post('/admin/tasks/bulk-import', { \n      csvData: `学生ID,日期,任务类型,任务标题\\n${taskData.studentId},${taskData.date},${taskData.type || '学习'},${taskData.title}`\n    }),\n\n  // 批量导入任务\n  bulkImportTasks: (csvData) => \n    api.post('/admin/tasks/bulk-import', { csvData }),\n  \n  // 获取任务报告\n  getTaskReport: (date) => \n    api.get('/admin/reports/tasks', { params: { date } })\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}