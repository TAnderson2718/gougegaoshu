{"ast":null,"code":"var _jsxFileName = \"/Users/danieldong/Documents/GitHub/gougegaoshu/frontend/src/contexts/AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\n\n// 初始状态\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  loading: true,\n  error: null,\n  systemDate: new Date()\n};\n\n// Action类型\nconst actionTypes = {\n  SET_LOADING: 'SET_LOADING',\n  SET_USER: 'SET_USER',\n  SET_ERROR: 'SET_ERROR',\n  LOGOUT: 'LOGOUT',\n  SET_SYSTEM_DATE: 'SET_SYSTEM_DATE'\n};\n\n// Reducer\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: !!action.payload,\n        loading: false,\n        error: null\n      };\n    case actionTypes.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    case actionTypes.SET_SYSTEM_DATE:\n      return {\n        ...state,\n        systemDate: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\n// Context Provider\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // 初始化时检查token\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      if (token && savedUser) {\n        try {\n          // 验证token是否有效\n          const response = await authAPI.verify();\n          if (response.success) {\n            dispatch({\n              type: actionTypes.SET_USER,\n              payload: JSON.parse(savedUser)\n            });\n          } else {\n            // token无效，清除本地存储\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            dispatch({\n              type: actionTypes.LOGOUT\n            });\n          }\n        } catch (error) {\n          console.error('Token验证失败:', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          dispatch({\n            type: actionTypes.LOGOUT\n          });\n        }\n      } else {\n        dispatch({\n          type: actionTypes.SET_LOADING,\n          payload: false\n        });\n      }\n    };\n    initAuth();\n  }, []);\n\n  // 登录\n  const login = async (studentId, password, rememberMe = false) => {\n    try {\n      dispatch({\n        type: actionTypes.SET_LOADING,\n        payload: true\n      });\n      dispatch({\n        type: actionTypes.SET_ERROR,\n        payload: null\n      });\n      const response = await authAPI.login(studentId, password);\n      if (response.success) {\n        const {\n          token,\n          student\n        } = response.data;\n\n        // 保存到localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(student));\n        if (rememberMe) {\n          localStorage.setItem('savedCredentials', JSON.stringify({\n            studentId,\n            password\n          }));\n        } else {\n          localStorage.removeItem('savedCredentials');\n        }\n        dispatch({\n          type: actionTypes.SET_USER,\n          payload: student\n        });\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      dispatch({\n        type: actionTypes.SET_ERROR,\n        payload: error.message\n      });\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  };\n\n  // 登出\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch({\n      type: actionTypes.LOGOUT\n    });\n  };\n\n  // 强制修改密码\n  const forceChangePassword = async newPassword => {\n    try {\n      const response = await authAPI.forceChangePassword(newPassword);\n      if (response.success) {\n        // 更新用户状态\n        const updatedUser = {\n          ...state.user,\n          forcePasswordChange: false\n        };\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        dispatch({\n          type: actionTypes.SET_USER,\n          payload: updatedUser\n        });\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  };\n\n  // 修改密码\n  const changePassword = async (oldPassword, newPassword) => {\n    try {\n      const response = await authAPI.changePassword(oldPassword, newPassword);\n      return response;\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  };\n\n  // 设置系统日期（用于模拟）\n  const setSystemDate = date => {\n    dispatch({\n      type: actionTypes.SET_SYSTEM_DATE,\n      payload: date\n    });\n  };\n\n  // 进入下一天（模拟功能）\n  const advanceDay = () => {\n    const nextDay = new Date(state.systemDate);\n    nextDay.setDate(nextDay.getDate() + 1);\n    setSystemDate(nextDay);\n  };\n  const value = {\n    ...state,\n    login,\n    logout,\n    forceChangePassword,\n    changePassword,\n    setSystemDate,\n    advanceDay\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook for using context\n_s(AppProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AppProvider;\nexport const useApp = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","jsxDEV","_jsxDEV","AppContext","initialState","user","isAuthenticated","loading","error","systemDate","Date","actionTypes","SET_LOADING","SET_USER","SET_ERROR","LOGOUT","SET_SYSTEM_DATE","appReducer","state","action","type","payload","AppProvider","children","_s","dispatch","initAuth","token","localStorage","getItem","savedUser","response","verify","success","JSON","parse","removeItem","console","login","studentId","password","rememberMe","student","data","setItem","stringify","message","logout","forceChangePassword","newPassword","updatedUser","forcePasswordChange","changePassword","oldPassword","setSystemDate","date","advanceDay","nextDay","setDate","getDate","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","Error","$RefreshReg$"],"sources":["/Users/danieldong/Documents/GitHub/gougegaoshu/frontend/src/contexts/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\n\nconst AppContext = createContext();\n\n// 初始状态\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  loading: true,\n  error: null,\n  systemDate: new Date()\n};\n\n// Action类型\nconst actionTypes = {\n  SET_LOADING: 'SET_LOADING',\n  SET_USER: 'SET_USER',\n  SET_ERROR: 'SET_ERROR',\n  LOGOUT: 'LOGOUT',\n  SET_SYSTEM_DATE: 'SET_SYSTEM_DATE'\n};\n\n// Reducer\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.SET_LOADING:\n      return { ...state, loading: action.payload };\n    \n    case actionTypes.SET_USER:\n      return { \n        ...state, \n        user: action.payload, \n        isAuthenticated: !!action.payload,\n        loading: false,\n        error: null\n      };\n    \n    case actionTypes.SET_ERROR:\n      return { ...state, error: action.payload, loading: false };\n    \n    case actionTypes.LOGOUT:\n      return { \n        ...state, \n        user: null, \n        isAuthenticated: false, \n        loading: false \n      };\n    \n    case actionTypes.SET_SYSTEM_DATE:\n      return { ...state, systemDate: action.payload };\n    \n    default:\n      return state;\n  }\n}\n\n// Context Provider\nexport const AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // 初始化时检查token\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      \n      if (token && savedUser) {\n        try {\n          // 验证token是否有效\n          const response = await authAPI.verify();\n          if (response.success) {\n            dispatch({ \n              type: actionTypes.SET_USER, \n              payload: JSON.parse(savedUser) \n            });\n          } else {\n            // token无效，清除本地存储\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            dispatch({ type: actionTypes.LOGOUT });\n          }\n        } catch (error) {\n          console.error('Token验证失败:', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          dispatch({ type: actionTypes.LOGOUT });\n        }\n      } else {\n        dispatch({ type: actionTypes.SET_LOADING, payload: false });\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  // 登录\n  const login = async (studentId, password, rememberMe = false) => {\n    try {\n      dispatch({ type: actionTypes.SET_LOADING, payload: true });\n      dispatch({ type: actionTypes.SET_ERROR, payload: null });\n\n      const response = await authAPI.login(studentId, password);\n      \n      if (response.success) {\n        const { token, student } = response.data;\n        \n        // 保存到localStorage\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(student));\n        \n        if (rememberMe) {\n          localStorage.setItem('savedCredentials', JSON.stringify({ \n            studentId, \n            password \n          }));\n        } else {\n          localStorage.removeItem('savedCredentials');\n        }\n\n        dispatch({ type: actionTypes.SET_USER, payload: student });\n        return { success: true };\n      }\n    } catch (error) {\n      dispatch({ type: actionTypes.SET_ERROR, payload: error.message });\n      return { success: false, message: error.message };\n    }\n  };\n\n  // 登出\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch({ type: actionTypes.LOGOUT });\n  };\n\n  // 强制修改密码\n  const forceChangePassword = async (newPassword) => {\n    try {\n      const response = await authAPI.forceChangePassword(newPassword);\n      if (response.success) {\n        // 更新用户状态\n        const updatedUser = { ...state.user, forcePasswordChange: false };\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        dispatch({ type: actionTypes.SET_USER, payload: updatedUser });\n        return { success: true };\n      }\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  };\n\n  // 修改密码\n  const changePassword = async (oldPassword, newPassword) => {\n    try {\n      const response = await authAPI.changePassword(oldPassword, newPassword);\n      return response;\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  };\n\n  // 设置系统日期（用于模拟）\n  const setSystemDate = (date) => {\n    dispatch({ type: actionTypes.SET_SYSTEM_DATE, payload: date });\n  };\n\n  // 进入下一天（模拟功能）\n  const advanceDay = () => {\n    const nextDay = new Date(state.systemDate);\n    nextDay.setDate(nextDay.getDate() + 1);\n    setSystemDate(nextDay);\n  };\n\n  const value = {\n    ...state,\n    login,\n    logout,\n    forceChangePassword,\n    changePassword,\n    setSystemDate,\n    advanceDay\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n// Hook for using context\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n\nexport default AppContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}