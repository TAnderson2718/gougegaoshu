{"ast":null,"code":"import axios from 'axios';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器 - 添加token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器 - 处理错误\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  if (error.response) {\n    const {\n      status,\n      data\n    } = error.response;\n\n    // token过期或无效\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(data || {\n      message: '请求失败'\n    });\n  }\n  return Promise.reject({\n    message: '网络错误，请检查网络连接'\n  });\n});\n\n// 认证相关API\nexport const authAPI = {\n  // 学生登录\n  login: (studentId, password) => api.post('/auth/login', {\n    studentId,\n    password\n  }),\n  // 管理员登录\n  adminLogin: (adminId, password) => api.post('/auth/admin/login', {\n    studentId: adminId,\n    password\n  }),\n  // 强制修改密码\n  forceChangePassword: newPassword => api.post('/auth/force-change-password', {\n    newPassword\n  }),\n  // 修改密码\n  changePassword: (oldPassword, newPassword) => api.post('/auth/change-password', {\n    oldPassword,\n    newPassword\n  }),\n  // 验证token\n  verify: () => api.get('/auth/verify')\n};\n\n// 任务相关API\nexport const taskAPI = {\n  // 获取任务列表\n  getTasks: (startDate, endDate) => api.get('/tasks', {\n    params: {\n      startDate,\n      endDate\n    }\n  }),\n  // 更新任务\n  updateTask: (taskId, updates) => api.put(`/tasks/${taskId}`, updates),\n  // 请假申请\n  requestLeave: date => api.post('/tasks/leave', {\n    date\n  }),\n  // 获取请假记录\n  getLeaveRecords: () => api.get('/tasks/leave-records'),\n  // 24:00任务处理\n  processMidnightTasks: date => api.post('/tasks/midnight-process', {\n    date\n  }),\n  // 重置任务到初始状态\n  resetToInitial: () => api.post('/tasks/reset-to-initial')\n};\n\n// 档案相关API\nexport const profileAPI = {\n  // 获取档案\n  getProfile: () => api.get('/profiles'),\n  // 更新档案\n  updateProfile: profileData => api.put('/profiles', profileData)\n};\n\n// 管理员相关API\nexport const adminAPI = {\n  // 获取学生列表\n  getStudents: () => api.get('/admin/students'),\n  // 创建学生\n  createStudent: name => api.post('/admin/students', {\n    name\n  }),\n  // 重置密码\n  resetPassword: studentId => api.post(`/admin/students/${studentId}/reset-password`),\n  // 获取学生档案\n  getStudentProfile: studentId => api.get(`/admin/students/${studentId}/profile`),\n  // 创建单个任务\n  createTask: taskData => api.post('/admin/tasks/bulk-import', {\n    csvData: `学生ID,日期,任务类型,任务标题\\n${taskData.studentId},${taskData.date},${taskData.type || '学习'},${taskData.title}`\n  }),\n  // 批量导入任务\n  bulkImportTasks: csvData => api.post('/admin/tasks/bulk-import', {\n    csvData\n  }),\n  // 获取任务报告\n  getTaskReport: date => api.get('/admin/reports/tasks', {\n    params: {\n      date\n    }\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","status","removeItem","window","location","href","message","authAPI","login","studentId","password","post","adminLogin","adminId","forceChangePassword","newPassword","changePassword","oldPassword","verify","get","taskAPI","getTasks","startDate","endDate","params","updateTask","taskId","updates","put","requestLeave","date","getLeaveRecords","processMidnightTasks","resetToInitial","profileAPI","getProfile","updateProfile","profileData","adminAPI","getStudents","createStudent","name","resetPassword","getStudentProfile","createTask","taskData","csvData","type","title","bulkImportTasks","getTaskReport"],"sources":["/Users/danieldong/Documents/GitHub/gougegaoshu/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器 - 添加token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器 - 处理错误\napi.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    if (error.response) {\n      const { status, data } = error.response;\n      \n      // token过期或无效\n      if (status === 401 || status === 403) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n      }\n      \n      return Promise.reject(data || { message: '请求失败' });\n    }\n    \n    return Promise.reject({ message: '网络错误，请检查网络连接' });\n  }\n);\n\n// 认证相关API\nexport const authAPI = {\n  // 学生登录\n  login: (studentId, password) =>\n    api.post('/auth/login', { studentId, password }),\n\n  // 管理员登录\n  adminLogin: (adminId, password) =>\n    api.post('/auth/admin/login', { studentId: adminId, password }),\n\n  // 强制修改密码\n  forceChangePassword: (newPassword) =>\n    api.post('/auth/force-change-password', { newPassword }),\n\n  // 修改密码\n  changePassword: (oldPassword, newPassword) =>\n    api.post('/auth/change-password', { oldPassword, newPassword }),\n\n  // 验证token\n  verify: () =>\n    api.get('/auth/verify')\n};\n\n// 任务相关API\nexport const taskAPI = {\n  // 获取任务列表\n  getTasks: (startDate, endDate) => \n    api.get('/tasks', { params: { startDate, endDate } }),\n  \n  // 更新任务\n  updateTask: (taskId, updates) => \n    api.put(`/tasks/${taskId}`, updates),\n  \n  // 请假申请\n  requestLeave: (date) => \n    api.post('/tasks/leave', { date }),\n  \n  // 获取请假记录\n  getLeaveRecords: () => \n    api.get('/tasks/leave-records'),\n  \n  // 24:00任务处理\n  processMidnightTasks: (date) => \n    api.post('/tasks/midnight-process', { date }),\n  \n  // 重置任务到初始状态\n  resetToInitial: () => \n    api.post('/tasks/reset-to-initial')\n};\n\n// 档案相关API\nexport const profileAPI = {\n  // 获取档案\n  getProfile: () => \n    api.get('/profiles'),\n  \n  // 更新档案\n  updateProfile: (profileData) => \n    api.put('/profiles', profileData)\n};\n\n// 管理员相关API\nexport const adminAPI = {\n  // 获取学生列表\n  getStudents: () => \n    api.get('/admin/students'),\n  \n  // 创建学生\n  createStudent: (name) => \n    api.post('/admin/students', { name }),\n  \n  // 重置密码\n  resetPassword: (studentId) => \n    api.post(`/admin/students/${studentId}/reset-password`),\n  \n  // 获取学生档案\n  getStudentProfile: (studentId) => \n    api.get(`/admin/students/${studentId}/profile`),\n  \n  // 创建单个任务\n  createTask: (taskData) => \n    api.post('/admin/tasks/bulk-import', { \n      csvData: `学生ID,日期,任务类型,任务标题\\n${taskData.studentId},${taskData.date},${taskData.type || '学习'},${taskData.title}`\n    }),\n\n  // 批量导入任务\n  bulkImportTasks: (csvData) => \n    api.post('/admin/tasks/bulk-import', { csvData }),\n  \n  // 获取任务报告\n  getTaskReport: (date) => \n    api.get('/admin/reports/tasks', { params: { date } })\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}