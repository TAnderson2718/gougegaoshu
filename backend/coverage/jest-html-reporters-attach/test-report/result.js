window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":20,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":22,"startTime":1753374049068,"success":false,"testResults":[{"numFailingTests":2,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1753374051775,"runtime":2692,"slow":false,"start":1753374049083},"testFilePath":"/Users/danieldong/Documents/GitHub/gougegaoshu/backend/tests/repositories/BaseRepository.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mBaseRepository › create › 应该成功创建记录\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected\u001b[39m\n    \u001b[31m+ Received\u001b[39m\n\n    \u001b[32m- \"INSERT INTO test_table (name, active) VALUES (?, ?)\"\u001b[39m,\n    \u001b[31m+ \"\u001b[39m\n    \u001b[31m      INSERT INTO test_table (name, active) \u001b[39m\n    \u001b[31m      VALUES (?, ?)\u001b[39m\n    \u001b[31m    \"\u001b[39m,\n      \u001b[2m[\"New Test\", true]\u001b[22m,\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 233 |\u001b[39m       \u001b[90m// 验证结果\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 234 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoEqual(createdRecord)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 235 |\u001b[39m       expect(mockDb\u001b[33m.\u001b[39mrun)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 236 |\u001b[39m         \u001b[32m'INSERT INTO test_table (name, active) VALUES (?, ?)'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 237 |\u001b[39m         [\u001b[32m'New Test'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m]\u001b[22m\n\u001b[2m     \u001b[90m 238 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/repositories/BaseRepository.test.js\u001b[39m\u001b[0m\u001b[2m:235:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mBaseRepository › update › 应该成功更新记录\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected\u001b[39m\n    \u001b[31m+ Received\u001b[39m\n\n    \u001b[32m- \"UPDATE test_table SET name = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?\"\u001b[39m,\n    \u001b[31m+ \"\u001b[39m\n    \u001b[31m      UPDATE test_table \u001b[39m\n    \u001b[31m      SET name = ?, updated_at = CURRENT_TIMESTAMP \u001b[39m\n    \u001b[31m      WHERE id = ?\u001b[39m\n    \u001b[31m    \"\u001b[39m,\n      \u001b[2m[\"Updated Test\", 1]\u001b[22m,\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 273 |\u001b[39m       \u001b[90m// 验证结果\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 274 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoEqual(updatedRecord)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 275 |\u001b[39m       expect(mockDb\u001b[33m.\u001b[39mrun)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 276 |\u001b[39m         \u001b[32m'UPDATE test_table SET name = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 277 |\u001b[39m         [\u001b[32m'Updated Test'\u001b[39m\u001b[33m,\u001b[39m id]\u001b[22m\n\u001b[2m     \u001b[90m 278 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/repositories/BaseRepository.test.js\u001b[39m\u001b[0m\u001b[2m:275:26)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["BaseRepository","query"],"duration":108,"failureMessages":[],"fullName":"BaseRepository query 应该成功执行查询并返回结果","status":"passed","title":"应该成功执行查询并返回结果"},{"ancestorTitles":["BaseRepository","query"],"duration":106,"failureMessages":[],"fullName":"BaseRepository query 应该在查询失败时抛出错误","status":"passed","title":"应该在查询失败时抛出错误"},{"ancestorTitles":["BaseRepository","queryOne"],"duration":101,"failureMessages":[],"fullName":"BaseRepository queryOne 应该返回第一个结果","status":"passed","title":"应该返回第一个结果"},{"ancestorTitles":["BaseRepository","queryOne"],"duration":108,"failureMessages":[],"fullName":"BaseRepository queryOne 应该在没有结果时返回null","status":"passed","title":"应该在没有结果时返回null"},{"ancestorTitles":["BaseRepository","execute"],"duration":104,"failureMessages":[],"fullName":"BaseRepository execute 应该成功执行插入/更新/删除操作","status":"passed","title":"应该成功执行插入/更新/删除操作"},{"ancestorTitles":["BaseRepository","execute"],"duration":102,"failureMessages":[],"fullName":"BaseRepository execute 应该在没有影响行数时返回success: false","status":"passed","title":"应该在没有影响行数时返回success: false"},{"ancestorTitles":["BaseRepository","findAll"],"duration":104,"failureMessages":[],"fullName":"BaseRepository findAll 应该返回所有记录","status":"passed","title":"应该返回所有记录"},{"ancestorTitles":["BaseRepository","findAll"],"duration":101,"failureMessages":[],"fullName":"BaseRepository findAll 应该支持条件查询","status":"passed","title":"应该支持条件查询"},{"ancestorTitles":["BaseRepository","findAll"],"duration":101,"failureMessages":[],"fullName":"BaseRepository findAll 应该支持排序和限制","status":"passed","title":"应该支持排序和限制"},{"ancestorTitles":["BaseRepository","findById"],"duration":101,"failureMessages":[],"fullName":"BaseRepository findById 应该根据ID查找记录","status":"passed","title":"应该根据ID查找记录"},{"ancestorTitles":["BaseRepository","create"],"duration":133,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected\u001b[39m\n\u001b[31m+ Received\u001b[39m\n\n\u001b[32m- \"INSERT INTO test_table (name, active) VALUES (?, ?)\"\u001b[39m,\n\u001b[31m+ \"\u001b[39m\n\u001b[31m      INSERT INTO test_table (name, active) \u001b[39m\n\u001b[31m      VALUES (?, ?)\u001b[39m\n\u001b[31m    \"\u001b[39m,\n  \u001b[2m[\"New Test\", true]\u001b[22m,\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.toHaveBeenCalledWith (/Users/danieldong/Documents/GitHub/gougegaoshu/backend/tests/repositories/BaseRepository.test.js:235:26)"],"fullName":"BaseRepository create 应该成功创建记录","status":"failed","title":"应该成功创建记录"},{"ancestorTitles":["BaseRepository","create"],"duration":103,"failureMessages":[],"fullName":"BaseRepository create 应该在创建失败时返回null","status":"passed","title":"应该在创建失败时返回null"},{"ancestorTitles":["BaseRepository","update"],"duration":105,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected\u001b[39m\n\u001b[31m+ Received\u001b[39m\n\n\u001b[32m- \"UPDATE test_table SET name = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?\"\u001b[39m,\n\u001b[31m+ \"\u001b[39m\n\u001b[31m      UPDATE test_table \u001b[39m\n\u001b[31m      SET name = ?, updated_at = CURRENT_TIMESTAMP \u001b[39m\n\u001b[31m      WHERE id = ?\u001b[39m\n\u001b[31m    \"\u001b[39m,\n  \u001b[2m[\"Updated Test\", 1]\u001b[22m,\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.toHaveBeenCalledWith (/Users/danieldong/Documents/GitHub/gougegaoshu/backend/tests/repositories/BaseRepository.test.js:275:26)"],"fullName":"BaseRepository update 应该成功更新记录","status":"failed","title":"应该成功更新记录"},{"ancestorTitles":["BaseRepository","delete"],"duration":103,"failureMessages":[],"fullName":"BaseRepository delete 应该成功删除记录","status":"passed","title":"应该成功删除记录"},{"ancestorTitles":["BaseRepository","delete"],"duration":108,"failureMessages":[],"fullName":"BaseRepository delete 应该在删除失败时返回false","status":"passed","title":"应该在删除失败时返回false"},{"ancestorTitles":["BaseRepository","count"],"duration":102,"failureMessages":[],"fullName":"BaseRepository count 应该返回记录总数","status":"passed","title":"应该返回记录总数"},{"ancestorTitles":["BaseRepository","count"],"duration":109,"failureMessages":[],"fullName":"BaseRepository count 应该支持条件计数","status":"passed","title":"应该支持条件计数"},{"ancestorTitles":["BaseRepository","buildWhereClause"],"duration":106,"failureMessages":[],"fullName":"BaseRepository buildWhereClause 应该构建简单的WHERE子句","status":"passed","title":"应该构建简单的WHERE子句"},{"ancestorTitles":["BaseRepository","buildWhereClause"],"duration":104,"failureMessages":[],"fullName":"BaseRepository buildWhereClause 应该处理IN查询","status":"passed","title":"应该处理IN查询"},{"ancestorTitles":["BaseRepository","buildWhereClause"],"duration":106,"failureMessages":[],"fullName":"BaseRepository buildWhereClause 应该处理NULL查询","status":"passed","title":"应该处理NULL查询"},{"ancestorTitles":["BaseRepository","buildWhereClause"],"duration":105,"failureMessages":[],"fullName":"BaseRepository buildWhereClause 应该处理自定义操作符","status":"passed","title":"应该处理自定义操作符"},{"ancestorTitles":["BaseRepository","buildWhereClause"],"duration":104,"failureMessages":[],"fullName":"BaseRepository buildWhereClause 应该在没有条件时返回默认WHERE子句","status":"passed","title":"应该在没有条件时返回默认WHERE子句"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["controllers/**/*.js","services/**/*.js","repositories/**/*.js","routes/**/*.js","middleware/**/*.js","config/**/*.js","utils/**/*.js","scripts/**/*.js","!**/node_modules/**","!**/tests/**","!**/coverage/**","!server.js"],"coverageDirectory":"/Users/danieldong/Documents/GitHub/gougegaoshu/backend/coverage","coverageProvider":"babel","coverageReporters":["text","text-summary","html","lcov","json"],"coverageThreshold":{"global":{"branches":70,"functions":70,"lines":70,"statements":70}},"detectLeaks":false,"detectOpenHandles":true,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":15,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/Users/danieldong/Documents/GitHub/gougegaoshu/backend/node_modules/jest-html-reporters/index.js",{"publicPath":"./coverage","filename":"test-report.html","expand":true,"hideIcon":false,"pageTitle":"任务管理系统测试报告","inlineSource":false}]],"rootDir":"/Users/danieldong/Documents/GitHub/gougegaoshu/backend","runTestsByPath":false,"seed":831862465,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"tests/repositories/BaseRepository.test.js","testSequencer":"/Users/danieldong/Documents/GitHub/gougegaoshu/backend/node_modules/@jest/test-sequencer/build/index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1753374051777,"_reporterOptions":{"publicPath":"./coverage","filename":"test-report.html","expand":true,"pageTitle":"任务管理系统测试报告","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})